apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "tw.ctl.interest"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 11
        versionName "1.0.7"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        project.ext.set("archivesBaseName", "interest-" + defaultConfig.versionName)
    }

    signingConfigs {
        release {
            def keystoreFile = rootProject.file('keystore.properties')
            def props = new Properties()
            if (keystoreFile.canRead()) {
                props.load(new FileInputStream(keystoreFile))
                storeFile file(props['KEYSTORE_FILE'])
                storePassword props['KEYSTORE_PASSWORD']
                keyAlias props['KEYSTORE_ALIAS']
                keyPassword props['KEYSTORE_ALIAS_PASSWORD']
            } else {
                println '\'keystore.properties\' not found!'
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    if (project.hasProperty('storeFile') && project.hasProperty('storePassword')
//            && project.hasProperty('keyPassword') && project.hasProperty('keyAlias')) {
//        android.signingConfigs.release.storeFile = file(storeFile)
//        android.signingConfigs.release.storePassword = storePassword
//        android.signingConfigs.release.keyPassword = keyPassword
//        android.signingConfigs.release.keyAlias = keyAlias
//    } else {
//        android.buildTypes.release.signingConfig = null
//    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'

    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.firebase:firebase-ads:11.8.0'
    implementation 'com.google.firebase:firebase-crash:11.8.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.1'

    implementation 'com.intuit.sdp:sdp-android:1.0.4'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "android.arch.persistence.room:runtime:1.0.0"
    implementation "android.arch.persistence.room:rxjava2:1.0.0"
    kapt "android.arch.persistence.room:compiler:1.0.0"

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.15.0"

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply plugin: 'com.google.gms.google-services'
